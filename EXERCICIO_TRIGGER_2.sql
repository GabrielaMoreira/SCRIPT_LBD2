/*Escreva uma trigger que ao inserir um item do pedido verifique se o cliente
já possui mais de 2 pedidos com entrega no mês atual.
Se sim, aplicar um desconto de 15% ao prelo do item que está sendo cadastrado*/
CREATE OR REPLACE TRIGGER INSERE_ITEM
BEFORE INSERT ON ITEM_PEDIDO
FOR EACH ROW
DECLARE
    VQTD_PEDIDOS NUMBER;
    VCOD_CLIENTE NUMBER;
BEGIN
    
    SELECT COD_CLIENTE INTO VCOD_CLIENTE
    FROM PEDIDO
    WHERE PEDIDO.NUM_PEDIDO = :NEW.NUM_PEDIDO;
    
    SELECT COUNT(PEDIDO.COD_CLIENTE) INTO VQTD_PEDIDOS
    FROM PEDIDO
    WHERE PEDIDO.COD_CLIENTE = VCOD_CLIENTE
    AND EXTRACT(MONTH FROM PEDIDO.PRAZO_ENTREGA) = EXTRACT(MONTH FROM SYSDATE);
       
    IF VQTD_PEDIDOS > 2 THEN
        :NEW.VALOR := :NEW.VALOR * 0.85;
    ELSE
        :NEW.VALOR := :NEW.VALOR;
    END IF;

END INSERE_ITEM;


INSERT INTO ITEM_PEDIDO
VALUES(78949, 5, 2, 160);
SELECT * FROM ITEM_PEDIDO
WHERE NUM_PEDIDO = 78949;

/*Crie um trigger que ao ser alterado o campo endereço da tabela de cliente 
faça a inserção de uma linha na tabela de log com a mensagem*/
CREATE OR REPLACE TRIGGER ALTERA_ENDERECO_CLIENTE
BEFORE UPDATE ON CLIENTE
FOR EACH ROW
BEGIN
    
    INSERT INTO TAB_LOG
    VALUES(SYSDATE, 'OBSERVAR MUDANÇA DE ENDEREÇO' || ' DO CLIENTE: ' || :NEW.COD_CLIENTE, 'ANTIGO: ' || :OLD.ENDERECO || ', NOVO: ' || :NEW.ENDERECO);
 
END ALTERA_ENDERECO_CLIENTE;
 
SELECT * FROM CLIENTE;
UPDATE CLIENTE
SET ENDERECO = 'JARDIM AMERICA'
WHERE COD_CLIENTE = 12592;
SELECT * FROM TAB_LOG;

/*Crie uma trigger que ao incluir um item de pedido, busque o valor 
do campo 'preço unitário' na tabela de produto e o associe ao item incluído*/
CREATE OR REPLACE TRIGGER CALCULA_VALOR_ITEM
BEFORE INSERT ON ITEM_PEDIDO
FOR EACH ROW
DECLARE
    VPRECO_PRODUTO PRODUTO.VALOR_UNITARIO%TYPE;
BEGIN
    
    SELECT VALOR_UNITARIO INTO VPRECO_PRODUTO
    FROM PRODUTO
    WHERE PRODUTO.COD_PRODUTO = :NEW.COD_PRODUTO;
    
    :NEW.VALOR :=  VPRECO_PRODUTO * :NEW.QUANTIDADE;

END CALCULA_VALOR_ITEM;

/*IMPORTANTE: ESCOLHER UM PEDIDO QUE NÃO ESTEJA AO MESMO TEMPO
NA TRIGGER: INSERE_ITEM*/
SELECT * FROM PRODUTO;
INSERT INTO ITEM_PEDIDO
VALUES(78945, 2, 2, 160);
SELECT * FROM ITEM_PEDIDO
WHERE NUM_PEDIDO = 78945;


/*Crie uma trigger que ao incluir um novo item de pedido
verifique se a quantidade informada no item existe em estoque
(comparar com o campo 'Quantidade Estoque' da tabela produto*/
CREATE OR REPLACE TRIGGER BAIXAR_ESTOQUE
BEFORE INSERT ON ITEM_PEDIDO
FOR EACH ROW
DECLARE
    VQTD_ESTOQUE PRODUTO.QTD_ESTOQUE%TYPE;
BEGIN
    
    SELECT QTD_ESTOQUE INTO VQTD_ESTOQUE
    FROM PRODUTO
    WHERE PRODUTO.COD_PRODUTO = :NEW.COD_PRODUTO;
    
    IF :NEW.QUANTIDADE = 0 THEN
        'ABORTAR';
    ELSE
        IF :NEW.QUANTIDADE <= VQTD_ESTOQUE THEN
            
        ELSE
            IF :NEW.QUANTIDADE > VQTD_ESTOQUE THEN
            
            END IF;
        END IF;        
    END IF;

END BAIXAR_ESTOQUE;



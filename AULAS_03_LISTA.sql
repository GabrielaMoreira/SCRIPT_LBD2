/*//////////////////////////  PARTE 2.5 - CRIANDO E MANIPULANDO VISÕES //////////////////////////*/
--EXERCICIO 1
CREATE VIEW V_PEDIDO_CLIENTE
AS SELECT NUM_PEDIDO, COD_CLIENTE, PRAZO_ENTREGA
FROM PEDIDO;

SELECT * FROM V_PEDIDO_CLIENTE;


--EXERCICIO 2
CREATE VIEW V_LISTA_PRODUTO_UN
AS SELECT * FROM PRODUTO
WHERE UNIDADE = 'UN';

SELECT * FROM V_LISTA_PRODUTO_UN;


--EXERCICIO 3
CREATE VIEW V_LISTA_PRODUTO_MENORMEDIA
AS SELECT * FROM PRODUTO
WHERE VALOR_UNITARIO < (SELECT AVG(VALOR_UNITARIO) FROM PRODUTO);


SELECT COD_PRODUTO,
       DESCRICAO,
       UNIDADE,
       VALOR_UNITARIO,
       (SELECT CAST(AVG(VALOR_UNITARIO) AS DECIMAL(10,2)) FROM PRODUTO) AS MEDIA
FROM PRODUTO
GROUP BY COD_PRODUTO, DESCRICAO, UNIDADE, VALOR_UNITARIO;

SELECT * FROM V_LISTA_PRODUTO_MENORMEDIA;

--EXERCICIO 4
CREATE VIEW V_PEDIDO_PORVENDEDOR
AS SELECT PEDIDO.COD_VENDEDOR,
          VENDEDOR.NOME_VENDEDOR,
          COUNT(PEDIDO.COD_VENDEDOR) AS QTD_PEDIDO
FROM PEDIDO, VENDEDOR
WHERE PEDIDO.COD_VENDEDOR = VENDEDOR.COD_VENDEDOR
GROUP BY PEDIDO.COD_VENDEDOR, VENDEDOR.NOME_VENDEDOR;

SELECT * FROM V_PEDIDO_PORVENDEDOR;


--EXERCICIO 5
/*
    NÃO SÃO ATUALIZAVEIS VISOES QUE POSSUEM JUNÇÕES OU COLUNAS CALCULAS, LOGO:
    *EXERCICIO 3
    *EXERCICIO 4
*/




/*//////////////////////////  PARTE 2.6 - CRIANDO E MANIPULANDO SUB-CONSULTAS //////////////////////////*/
--EXERCICIO 1
SELECT * FROM CLIENTE
WHERE ENDERECO = (SELECT ENDERECO FROM CLIENTE 
                    WHERE NOME_CLIENTE = 'LUISA MOREIRA');
                    
--EXERCICIO 2
SELECT * FROM PRODUTO
WHERE VALOR_UNITARIO < (SELECT AVG(VALOR_UNITARIO) FROM PRODUTO);

--EXERCICIO 3
SELECT DISTINCT 
       PEDIDO.COD_CLIENTE,
       CLIENTE.NOME_CLIENTE,
       PEDIDO.COD_VENDEDOR,
       VENDEDOR.NOME_VENDEDOR
FROM PEDIDO, CLIENTE, VENDEDOR
WHERE PEDIDO.COD_VENDEDOR = VENDEDOR.COD_VENDEDOR
AND   PEDIDO.COD_CLIENTE = CLIENTE.COD_CLIENTE 
AND   PEDIDO.COD_VENDEDOR = 98525 
AND   CLIENTE.COD_CLIENTE NOT IN (SELECT PEDIDO.COD_CLIENTE
                                  FROM PEDIDO
                                  WHERE PEDIDO.COD_VENDEDOR <> 98525);

/*OBS.: O DISTINCT FOI UTILIZADO POIS HOUVE CASO DE DUAS COMPRAS DO MESMO CLIENTE COM O VENDEDOR*/

--EXERCICIO 4
SELECT PEDIDO.COD_VENDEDOR, 
       VENDEDOR.NOME_VENDEDOR,
       COUNT(PEDIDO.COD_VENDEDOR) AS QTD_PEDIDO
FROM PEDIDO, VENDEDOR
WHERE PEDIDO.COD_VENDEDOR = VENDEDOR.COD_VENDEDOR
GROUP BY PEDIDO.COD_VENDEDOR, VENDEDOR.NOME_VENDEDOR
HAVING COUNT(PEDIDO.COD_VENDEDOR) < 1;
--ERRO: NO EXEMPLO ACIMA O VENDEDOR QUE NÃO FEZ NENHUM PEDIDO NÃO É SELECIONADO 


SELECT DISTINCT 
       PEDIDO.COD_VENDEDOR
FROM PEDIDO 
WHERE PEDIDO.COD_VENDEDOR NOT IN (SELECT PEDIDO.COD_VENDEDOR
                          FROM PEDIDO
                          GROUP BY PEDIDO.COD_VENDEDOR
                          HAVING COUNT(*) >= 1);

--EXERCICIO 5
SELECT DISTINCT VENDEDOR.NOME_VENDEDOR
FROM PEDIDO, VENDEDOR
WHERE PEDIDO.COD_VENDEDOR = VENDEDOR.COD_VENDEDOR
AND PEDIDO.NUM_PEIDO NOT IN(SELECT PEDIDO.NUM_PEDIDO
                            FROM PEDIDO
                            WHERE PEDIDIO.PRAZO_ENTREGA BETWEEN '01/05/2019' AND '01/06/2019');
               
--EXERCICIO 6
SELECT PEDIDO.COD_VENDEDOR, COUNT(*)
FROM PEDIDO
GROUP BY PEDIDO.COD_VENDEDOR
HAVING COUNT(*) = (SELECT MAX(COUNT(*))
                    FROM PEDIDO
                    GROUP BY COD_VENDEDOR);

--EXERCICIO 7 (Listar o nome dos clientes e o número total de pedidos associados a cada cliente em ordem 
--decrescente de vendas, isto é do cliente que mais tem pedidos para o que menos tem.)
SELECT CLIENTE.NOME_CLIENTE, 
       COUNT(PEDIDO.COD_CLIENTE) AS QTD_PEDIDOS
FROM CLIENTE, PEDIDO
WHERE PEDIDO.COD_CLIENTE = CLIENTE.COD_CLIENTE
GROUP BY PEDIDO.COD_CLIENTE, CLIENTE.NOME_CLIENTE;

--EXERCICIO 8 (Excluir  todos os itens dos pedidos feitos pelo cliente de código =2)


--EXERCICIO 9 (Alterar o valor unitário de todos os produtos sem vendas no ano de 2017 para menos 20%)
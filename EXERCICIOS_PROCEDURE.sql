--EXERCICIOS PROCEDURES
CREATE TABLE TAB_LOG(
    DATALOG DATE,
    CAMPO1 VARCHAR2(60),
    CAMPO2 VARCHAR2(60)
);

CREATE TABLE TAB_ERRO(
    DATALOG DATE,
    CAMPO1 VARCHAR2(60),
    CAMPO2 VARCHAR2(60)
);

--EXERCICIO 2
CREATE OR REPLACE PROCEDURE ENVIAR_BRINDES(PCOD_CLI NUMBER)
AS
    VQTD NUMBER(7,2);
    VNOME_CLI CLIENTE.NOME_CLIENTE%TYPE;
BEGIN
    SELECT NOME_CLIENTE INTO VNOME_CLI
    FROM CLIENTE
    WHERE COD_CLIENTE = PCOD_CLI;
    
    SELECT COUNT(*) INTO VQTD
    FROM PEDIDO
    WHERE COD_CLIENTE = PCOD_CLI;
    
    IF VQTD > 2 THEN
        INSERT INTO TAB_LOG VALUES (SYSDATE, 'CLIENTE ESPECIAL - ENVIAR BRINDE',
                                    PCOD_CLI|| ' - '|| VNOME_CLI);
    ELSE
        IF VQTD = 0 THEN
            INSERT INTO TAB_LOG VALUES (SYSDATE, 'CLIENTE SEM PEDIDOS',
                                    PCOD_CLI|| ' - '|| VNOME_CLI);
        END IF;
    END IF;
COMMIT;

EXCEPTION
    WHEN NO_DATA_FOUND THEN
        ROLLBACK;
END ENVIAR_BRINDES;

SELECT * FROM PEDIDO;
EXEC ENVIAR_BRINDES(12593);
SELECT * FROM TAB_LOG;

-- EXERCICIO 3
CREATE OR REPLACE PROCEDURE FAIXA_COMISSAO(PCOD_VEN NUMBER)
AS
    VSOMATORIO NUMBER(7,2);
    VPEDIDO NUMBER(7,2);
    VNOME_VEN VENDEDOR.NOME_VENDEDOR%TYPE;    
BEGIN
    SELECT NOME_VENDEDOR INTO VNOME_VEN
    FROM VENDEDOR
    WHERE COD_VENDEDOR = PCOD_VEN;
    
    SELECT SUM(VALOR) INTO VSOMATORIO
    FROM PEDIDO
    WHERE COD_VENDEDOR = PCOD_VEN;
    
    SELECT COUNT(*) INTO VPEDIDO
    FROM PEDIDO
    WHERE COD_VENDEDOR = PCOD_VEN;
    
    IF VPEDIDO = 0 THEN
        UPDATE VENDEDOR
        SET FAIXA_COMISSAO = 0.0
        WHERE COD_VENDEDOR = PCOD_VEN;
    ELSE    
        IF VSOMATORIO > 0 AND VSOMATORIO < 100.0 THEN
            UPDATE VENDEDOR
            SET FAIXA_COMISSAO = 10.0
            WHERE COD_VENDEDOR = PCOD_VEN;        
        ELSE
            IF VSOMATORIO >= 100.0 AND VSOMATORIO <= 1000.0 THEN
                UPDATE VENDEDOR
                SET FAIXA_COMISSAO = 15.0
                WHERE COD_VENDEDOR = PCOD_VEN;
            ELSE
                IF VSOMATORIO > 1000.0 THEN
                    UPDATE VENDEDOR
                    SET FAIXA_COMISSAO = 20.0
                    WHERE COD_VENDEDOR = PCOD_VEN;
                END IF;
            END IF;
        END IF;
    END IF;
COMMIT;

EXCEPTION
    WHEN NO_DATA_FOUND THEN
        ROLLBACK;
END FAIXA_COMISSAO;

SELECT * FROM PEDIDO;
EXEC FAIXA_COMISSAO(98525);
SELECT * FROM VENDEDOR;
EXEC FAIXA_COMISSAO(98526);
SELECT * FROM VENDEDOR;

-- EXERCICIO 4
CREATE OR REPLACE PROCEDURE PRODUTO_DESUSO(PCOD_PROD NUMBER)
AS
    VQTD NUMBER(7,2);
    VPROD_NOME PRODUTO.DESCRICAO%TYPE;
BEGIN
    SELECT DESCRICAO INTO VPROD_NOME 
    FROM PRODUTO
    WHERE COD_PRODUTO = PCOD_PROD;
    
    SELECT COUNT(*) INTO VQTD
    FROM ITEM_PEDIDO
    WHERE COD_PRODUTO = PCOD_PROD;
        
    IF VQTD = 0.0 THEN
        BEGIN
            INSERT INTO TAB_LOG VALUES (SYSDATE, 
                                        'PRODUTO EXCLUIDO: ' || PCOD_PROD|| ' - '|| VPROD_NOME, 
                                        'USUARIO: ' || USER);
            DELETE FROM PRODUTO WHERE COD_PRODUTO = PCOD_PROD;
       END;
    END IF;
COMMIT;

EXCEPTION
    WHEN NO_DATA_FOUND THEN
        INSERT INTO TAB_ERRO VALUES (SYSDATE, 
                                    'CODIGO DO PRODUTO INEXISTENTE', 
                                    'CODIGO: ' || PCOD_PROD);
END PRODUTO_DESUSO;

SELECT * FROM PRODUTO;
EXEC PRODUTO_DESUSO(007);
SELECT * FROM TAB_LOG;
EXEC PRODUTO_DESUSO(007);
SELECT * FROM TAB_ERRO;


-- CRIANDO FUNÇÃO QUE CALCULA O DOBRO DE UM NUMERO
CREATE OR REPLACE FUNCTION FUNC_CALCULA_DOBRO(P1 IN NUMBER)
RETURN NUMBER
AS
    P2 NUMBER;
    
BEGIN

    P2 := P1 * 2;
    RETURN P2;
    
END;

SELECT NOME_MEDICO, FUNC_CALCULA_DOBRO(VALOR_HONORARIO) AS HONORARIO
FROM MEDICO;


--FUNÇÃO QUE DEVOLVE A DESCRIÇÃO DE UM PRODUTO
CREATE OR REPLACE FUNCTION FUNC_DEVOLVE_DESCRICAO (V_CODPRODUTO PRODUTO.COD_PRODUTO%TYPE)
RETURN VARCHAR2
AS
    V_DESC PRODUTO.DESCRICAO%TYPE;
    
BEGIN

    SELECT DESCRICAO INTO V_DESC 
    FROM PRODUTO
    WHERE PRODUTO.COD_PRODUTO = V_CODPRODUTO;
    
    RETURN (V_DESC);
    
END FUNC_DEVOLVE_DESCRICAO;

SELECT NUM_PEDIDO, COD_PRODUTO, FUNC_DEVOLVE_DESCRICAO(COD_PRODUTO) AS DESCRICAO
FROM ITEM_PEDIDO;




/*  EXERCICIOS FUNÇÕES */

-- 1) ESCREVA UMA FUNÇÃO QUE RECEBA COMO PARAMETRO UMA DATA NO FORMATO
-- DD/MM/YYYY E DEVOLVA NO FORMATO DD/MM/YYYY:HH24:MI:SS
CREATE OR REPLACE FUNCTION FUNC_VER_HORA(V_DATA_INICIAL DATE)
RETURN VARCHAR2
AS
    V_DATA_FINAL VARCHAR2(25);
    
BEGIN

    V_DATA_FINAL := TO_CHAR(V_DATA_INICIAL, 'DD/MM/YYYY:HH24:MI:SS');
    RETURN(V_DATA_FINAL);
    
END FUNC_VER_HORA;

SELECT FUNC_VER_HORA(SYSDATE)
FROM DUAL;

-- 2)ESCREVA UMA FUNÇÃO QUE  RECEBA COMO PARAMETRO O CODIGO DE UM PACIENTE
-- E DEVOLVA "IDOSO" SE O PACIENTE TIVER MAIS DE 60 ANOS. CASO CONTRARIO
-- DEVOLVA "NÃO IDOSO"
CREATE OR REPLACE FUNCTION FUNC_PACIENTE_IDOSO(V_CODPACIENTE NUMBER)
RETURN VARCHAR2
AS
    STATUS VARCHAR2(10);
    V_IDADE NUMBER;
    
BEGIN
    SELECT (SYSDATE - DATA_NASC)/365.25 INTO V_IDADE
    FROM PACIENTE
    WHERE COD_PACIENTE = V_CODPACIENTE;
    
    
    IF V_IDADE > 60 THEN
        STATUS := 'IDOSO';
    ELSE
        STATUS := 'NÃO IDOSO';
    END IF;
    
    RETURN STATUS;

EXCEPTION
WHEN NO_DATA_FOUND THEN
    STATUS := 'VAZIO!';
    RETURN STATUS;
    
END FUNC_PACIENTE_IDOSO;


SELECT COD_PACIENTE, NOME_PACIENTE, FUNC_PACIENTE_IDOSO(COD_PACIENTE) AS IDOSO
FROM PACIENTE;


-- 3) CRIE UMA FUNÇÃO QUE RECEBE O CODIGO DO PRODUTO E RETORNA A QUANTIDADE 
-- CORRENTE EM ESTOQUE DE DETERMINADO PRODUTO.
CREATE OR REPLACE FUNCTION FUNC_CONSULTA_ESTOQUE(V_CODPRODUTO NUMBER)
RETURN NUMBER
AS
    V_ESTOQUE_ATUAL NUMBER;
    
BEGIN

    SELECT QTD_ESTOQUE INTO V_ESTOQUE_ATUAL
    FROM PRODUTO
    WHERE COD_PRODUTO = V_CODPRODUTO;
    
    RETURN V_ESTOQUE_ATUAL;

END FUNC_CONSULTA_ESTOQUE;

SELECT COD_PRODUTO, DESCRICAO, FUNC_CONSULTA_ESTOQUE(COD_PRODUTO) AS ESTOQUE
FROM PRODUTO;

-- 4) ESCREVA UMA FUNÇÃO QUE RECEBA UM NUMERO DE TELEFONE NÃO FORMATADO
-- E EXIBA ESTE NUMERO NO FORMATO (XX)XXXX-XXXX
CREATE OR REPLACE FUNCTION FUNC_FORMATA_TELEFONE(V_CODCLIENTE CLIENTE.COD_CLIENTE%TYPE)
RETURN VARCHAR2
AS
    V_TELEFONE_FORMATADO VARCHAR2(15);
    V_TELEFONE CLIENTE.TELEFONE%TYPE;
BEGIN

    SELECT TELEFONE INTO V_TELEFONE
    FROM CLIENTE
    WHERE COD_CLIENTE = V_CODCLIENTE;
    
    V_TELEFONE_FORMATADO := '(' || SUBSTR(V_TELEFONE, 1, 2)|| ')' ||
                                SUBSTR(V_TELEFONE, 3, 4) || '-' || SUBSTR(V_TELEFONE, 7, 10);
    
    RETURN V_TELEFONE_FORMATADO;
END FUNC_FORMATA_TELEFONE;

SELECT COD_CLIENTE, NOME_CLIENTE, FUNC_FORMATA_TELEFONE(COD_CLIENTE) AS TELEFONE
FROM CLIENTE;

SELECT * FROM CLIENTE;
